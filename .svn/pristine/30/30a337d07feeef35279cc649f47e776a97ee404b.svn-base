package org.xxpay.mgr.config;

import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.authz.SimpleAuthorizationInfo;
import org.apache.shiro.realm.AuthorizingRealm;
import org.apache.shiro.subject.PrincipalCollection;
import org.springframework.beans.factory.annotation.Autowired;
import org.xxpay.dal.dao.model.MchInfo;
import org.xxpay.dal.dao.model.SysPermission;
import org.xxpay.dal.dao.model.SysRole;
import org.xxpay.mgr.service.MchInfoService;

public class ShiroRealm extends AuthorizingRealm {
	
    @Autowired
    private MchInfoService mchInfoService;

    /**
     * 权限验证
     * @param principals
     * @return
     */
    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
        //System.out.println("ShiroRealm.doGetAuthorizationInfo() for principals");
        SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo();
        MchInfo mchInfo  =mchInfoService.getByUsername(principals.getPrimaryPrincipal().toString());
        for(SysRole role:mchInfo.getRoleList()){
            authorizationInfo.addRole(role.getRole());
            for(SysPermission p:role.getPermissions()){
                authorizationInfo.addStringPermission(p.getPermission());
            }
        }
        return authorizationInfo;
    }

    /*主要是用来进行身份认证的，也就是说验证用户输入的账号和密码是否正确。*/
    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
        //System.out.println("ShiroRealm.doGetAuthenticationInfo() for token");
        //获取用户的输入的账号.
        String username = (String)token.getPrincipal();
        //通过username从数据库中查找 User对象，如果找到，没找到.
        //实际项目中，这里可以根据实际情况做缓存，如果不做，Shiro自己也是有时间间隔机制，2分钟内不会重复执行该方法
        MchInfo mchInfo = mchInfoService.getByUsername(username);
        if(mchInfo == null){
            return null;
        }
        SimpleAuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo(
        		mchInfo.getUsername(), //用户名
                mchInfo.getPassword(), //密码
                getName()  //realm name
        );
        return authenticationInfo;
    }

}