package org.xxpay.mgr.service;

import org.apache.commons.lang3.StringUtils;
import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import org.springframework.util.CollectionUtils;
import org.xxpay.dal.dao.mapper.MchInfoMapper;
import org.xxpay.dal.dao.mapper.SysPermissionMapper;
import org.xxpay.dal.dao.mapper.SysRoleMapper;
import org.xxpay.dal.dao.model.MchInfo;
import org.xxpay.dal.dao.model.MchInfoExample;
import org.xxpay.dal.dao.model.SysPermission;
import org.xxpay.dal.dao.model.SysRole;

import java.util.List;

/**
 * Created by dingzhiwei on 17/5/4.
 */
@Service
public class MchInfoService {

    @Autowired
    private MchInfoMapper mchInfoMapper;
    @Autowired
    private SysRoleMapper sysRoleMapper;
    @Autowired
    private SysPermissionMapper sysPermissionMapper;
    @Autowired
    private SqlSessionTemplate sqlSessionTemplate;

    public MchInfo getByUsername(String username){
    	MchInfo mchInfo=mchInfoMapper.selectByUsername(username);
    	List<SysRole> roles=sysRoleMapper.selectByMchid(mchInfo.getMchId());
    	for(SysRole role:roles){
    		List<SysPermission> permissions=sysPermissionMapper.selectByRoleId(role.getId());
    		role.setPermissions(permissions);
    	}
    	mchInfo.setRoles(roles);
    	return mchInfo;
    }

    public void saveOrUpdate(MchInfo mchInfo) {
        if(org.springframework.util.StringUtils.isEmpty(mchInfo.getMchId())) {
            mchInfo.setMchId();
            sqlSessionTemplate.insert(mchInfo.getMchId(),mchInfo);
        }else{
            sqlSessionTemplate.update(mchInfo.getMchId(),mchInfo);
        }
    }

    public MchInfo selectMchInfo(String mchId) {
        return mchInfoMapper.selectByPrimaryKey(mchId);
    }

    public List<MchInfo> getMchInfoList(int offset, int limit, MchInfo mchInfo) {
        MchInfoExample example = new MchInfoExample();
        example.setOrderByClause("createTime DESC");
        example.setOffset(offset);
        example.setLimit(limit);
        MchInfoExample.Criteria criteria = example.createCriteria();
        setCriteria(criteria, mchInfo);
        return mchInfoMapper.selectByExample(example);
    }

    public Integer count(MchInfo mchInfo) {
        MchInfoExample example = new MchInfoExample();
        MchInfoExample.Criteria criteria = example.createCriteria();
        setCriteria(criteria, mchInfo);
        return mchInfoMapper.countByExample(example);
    }

    void setCriteria(MchInfoExample.Criteria criteria, MchInfo mchInfo) {
        if(mchInfo != null) {
            if(StringUtils.isNotBlank(mchInfo.getMchId())) criteria.andMchIdEqualTo(mchInfo.getMchId());
            if(mchInfo.getType() != null && !"-99".equals(mchInfo.getType())) criteria.andTypeEqualTo(mchInfo.getType());
        }
    }

}
