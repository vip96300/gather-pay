package org.xxpay.dal.dao.model;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

@Entity
@Table(name="t_mch_info")
public class MchInfo implements Serializable {

    @Column(nullable=false,unique =true)
    private String username;//帐号
    @Column(nullable=false)
    private String password; //密码;
    @Column()
    private String salt;//加密密码的盐
    @ManyToMany(fetch= FetchType.EAGER)//立即从数据库中进行加载数据;
    @JoinTable(name = "SysUserRole", joinColumns = { @JoinColumn(name = "mchId") }, inverseJoinColumns ={@JoinColumn(name = "roleId") })
    private List<SysRole> roleList;// 一个用户具有多个角色
    
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	/**
     * 密码盐.
     * @return
     */
    public String getCredentialsSalt(){
        return this.username+this.salt;
    }
	public List<SysRole> getRoleList() {
		return roleList;
	}

	public void setRoleList(List<SysRole> roleList) {
		this.roleList = roleList;
	}

	/**
	 * 商户ID
	 *
	 * @mbggenerated
	 */
    @Id
	private String mchId;
	/**
	 * 名称
	 *
	 * @mbggenerated
	 */
	@Column()
	private String name;

	/**
	 * 类型
	 *
	 * @mbggenerated
	 */
	@Column()
	private String type;

	/**
	 * 请求私钥
	 *
	 * @mbggenerated
	 */
	@Column()
	private String reqKey;

	/**
	 * 响应私钥
	 *
	 * @mbggenerated
	 */
	@Column()
	private String resKey;

	/**
	 * 商户状态,0-停止使用,1-使用中
	 *
	 * @mbggenerated
	 */
	@Column()
	private Byte state;

	/**
	 * 创建时间
	 *
	 * @mbggenerated
	 */
	@Column()
	private Date createTime;

	/**
	 * 更新时间
	 *
	 * @mbggenerated
	 */
	@Column()
	private Date updateTime;

	private static final long serialVersionUID = 1L;

	public String getMchId() {
		return mchId;
	}

	public void setMchId(String mchId) {
		this.mchId = mchId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getReqKey() {
		return reqKey;
	}

	public void setReqKey(String reqKey) {
		this.reqKey = reqKey;
	}

	public String getResKey() {
		return resKey;
	}

	public void setResKey(String resKey) {
		this.resKey = resKey;
	}

	public Byte getState() {
		return state;
	}

	public void setState(Byte state) {
		this.state = state;
	}

	public Date getCreateTime() {
		return createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	public Date getUpdateTime() {
		return updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(getClass().getSimpleName());
		sb.append(" [");
		sb.append("Hash = ").append(hashCode());
		sb.append(", mchId=").append(mchId);
		sb.append(", name=").append(name);
		sb.append(", type=").append(type);
		sb.append(", reqKey=").append(reqKey);
		sb.append(", resKey=").append(resKey);
		sb.append(", state=").append(state);
		sb.append(", createTime=").append(createTime);
		sb.append(", updateTime=").append(updateTime);
		sb.append("]");
		return sb.toString();
	}

	@Override
	public boolean equals(Object that) {
		if (this == that) {
			return true;
		}
		if (that == null) {
			return false;
		}
		if (getClass() != that.getClass()) {
			return false;
		}
		MchInfo other = (MchInfo) that;
		return (this.getMchId() == null ? other.getMchId() == null : this
				.getMchId().equals(other.getMchId()))
				&& (this.getName() == null ? other.getName() == null : this
						.getName().equals(other.getName()))
				&& (this.getType() == null ? other.getType() == null : this
						.getType().equals(other.getType()))
				&& (this.getReqKey() == null ? other.getReqKey() == null : this
						.getReqKey().equals(other.getReqKey()))
				&& (this.getResKey() == null ? other.getResKey() == null : this
						.getResKey().equals(other.getResKey()))
				&& (this.getState() == null ? other.getState() == null : this
						.getState().equals(other.getState()))
				&& (this.getCreateTime() == null ? other.getCreateTime() == null
						: this.getCreateTime().equals(other.getCreateTime()))
				&& (this.getUpdateTime() == null ? other.getUpdateTime() == null
						: this.getUpdateTime().equals(other.getUpdateTime()));
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((getMchId() == null) ? 0 : getMchId().hashCode());
		result = prime * result
				+ ((getName() == null) ? 0 : getName().hashCode());
		result = prime * result
				+ ((getType() == null) ? 0 : getType().hashCode());
		result = prime * result
				+ ((getReqKey() == null) ? 0 : getReqKey().hashCode());
		result = prime * result
				+ ((getResKey() == null) ? 0 : getResKey().hashCode());
		result = prime * result
				+ ((getState() == null) ? 0 : getState().hashCode());
		result = prime * result
				+ ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
		result = prime * result
				+ ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
		return result;
	}
}