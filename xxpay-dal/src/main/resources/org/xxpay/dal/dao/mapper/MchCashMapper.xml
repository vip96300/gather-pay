<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xxpay.dal.dao.mapper.MchCashMapper">
  <resultMap id="BaseResultMap" type="org.xxpay.dal.dao.model.MchCash">
    <id column="cashId" jdbcType="VARCHAR" property="cashId" />
    <result column="mchId" jdbcType="VARCHAR" property="mchId" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="cardId" jdbcType="VARCHAR" property="cardId" />
    <result column="bankNo" jdbcType="VARCHAR" property="bankNo" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="isDel" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cashId, mchId, amount, cardId, bankNo, status, remark, createTime, updateTime, isDel
  </sql>
  <select id="selectByExample" parameterType="org.xxpay.dal.dao.model.MchCashExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_mch_cash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_mch_cash
    where cashId = #{cashId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_mch_cash
    where cashId = #{cashId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.xxpay.dal.dao.model.MchCashExample">
    delete from t_mch_cash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xxpay.dal.dao.model.MchCash">
    insert into t_mch_cash (cashId, mchId, amount, 
      cardId, bankNo, status, 
      remark, createTime, updateTime, 
      isDel)
    values (#{cashId,jdbcType=VARCHAR}, #{mchId,jdbcType=VARCHAR}, #{amount,jdbcType=BIGINT}, 
      #{cardId,jdbcType=VARCHAR}, #{bankNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.xxpay.dal.dao.model.MchCash">
    insert into t_mch_cash
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cashId != null">
        cashId,
      </if>
      <if test="mchId != null">
        mchId,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="cardId != null">
        cardId,
      </if>
      <if test="bankNo != null">
        bankNo,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="isDel != null">
        isDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cashId != null">
        #{cashId,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null">
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xxpay.dal.dao.model.MchCashExample" resultType="java.lang.Long">
    select count(*) from t_mch_cash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_mch_cash
    <set>
      <if test="record.cashId != null">
        cashId = #{record.cashId,jdbcType=VARCHAR},
      </if>
      <if test="record.mchId != null">
        mchId = #{record.mchId,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.cardId != null">
        cardId = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNo != null">
        bankNo = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        isDel = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_mch_cash
    set cashId = #{record.cashId,jdbcType=VARCHAR},
      mchId = #{record.mchId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=BIGINT},
      cardId = #{record.cardId,jdbcType=VARCHAR},
      bankNo = #{record.bankNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      isDel = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xxpay.dal.dao.model.MchCash">
    update t_mch_cash
    <set>
      <if test="mchId != null">
        mchId = #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="cardId != null">
        cardId = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null">
        bankNo = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        isDel = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where cashId = #{cashId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xxpay.dal.dao.model.MchCash">
    update t_mch_cash
    set mchId = #{mchId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=BIGINT},
      cardId = #{cardId,jdbcType=VARCHAR},
      bankNo = #{bankNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      isDel = #{isDel,jdbcType=INTEGER}
    where cashId = #{cashId,jdbcType=VARCHAR}
  </update>
</mapper>